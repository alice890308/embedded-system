1. 在讓音符掉下的時候固定每250ms(可以再調整)往下掉一格，不管那個音符什麼時候出來
2. 在nano上開一個長度為15的陣列，儲存當前顯示中的音符。
   2.1 有新的音符進來的時候就從頭開始找空位，有空就丟
   2.2 因此在編譜的時候要注意圓盤上最多只能有15個音符顯示（應該很夠了啦
   2.3 當音符到底後，就把那個位子清空
   2.4 如果是要給超音波的那種全亮的音符，就用陣列中的第16個位置來表示(要特地留出來以標示全亮的)。但同時其他位置也要佔用
       八個位子來表示要亮的位置
3. uno會傳訊息給nano，叫他現在要顯示音符，還有要顯示的位置(col)
4. nano負責判定音符有沒有被打到，成功的話就會傳訊息給uno要加分
   4.1 如果是全亮的音符則要看陣列中的第16個位置來判斷現在是不是已經亮到尾巴了
   4.2 普通的音符就按下去的時候去檢查陣列裡面有沒有那個位置的音符，如果有就加分
   

main:
1. 玩家刷卡讀取最高分，在LCD上顯示
2. 按下按鈕，倒數三秒後開始。這三秒間會閃RGB led
3. 播放音樂、顯示音符，要和nano溝通
4. 根據nano回傳的加分指示，調整七段顯示器上的分數
5. 遊戲結束，清空資料，顯示分數五秒，換成歷史最高分
6. 若是在IDLE的時候刷了另外一張卡，則切換成另外一個使用者（目前就做兩個好了）

目前main可以做到的事:
1. 播音樂
2. 根據譜面傳送亮燈訊號給nano

目前main_dev中寫的東西:
1. main
2. main
3. 紀錄score，接到nano的訊息後可以加分

腳位 (uno)
3 blue (rgb)
5 green (rgb)
6 red (rgb)
7 7段顯示器, DIO
8 7段顯示器, CLK
9 RFID, reset
10 RFID, SPI/SS
11 RFID, MOSI
12 RFID, MISO
13 RFID, SCK
a0 mp3 player, tx
a1 mp3 player, rx
a2 button
a3 mp3 player, busy signal
a4 i2c
a5 i2c